//THIS FILE IS AUTOGENERATED BY GHOSTCOMPILER. DON'T MODIFY OR ALTER.
using AOT;
using Unity.Burst;
using Unity.Networking.Transport;
using Unity.Entities;
using Unity.Collections;
using Unity.NetCode;
using Unity.Transforms;
using Unity.Mathematics;
using ECSFrenzy;


namespace ECSFrenzy.Generated
{
    [BurstCompile]
    public struct ECSFrenzyPlayAudioRequestSerializer : IComponentData, IRpcCommandSerializer<ECSFrenzy.PlayAudioRequest>
    {
        public void Serialize(ref DataStreamWriter writer, in ECSFrenzy.PlayAudioRequest data)
        {
            writer.WriteFixedString128(data.Name);
            writer.WriteFloat(data.Volume);
        }

        public void Deserialize(ref DataStreamReader reader, ref ECSFrenzy.PlayAudioRequest data)
        {
            data.Name = reader.ReadFixedString128();
            data.Volume = reader.ReadFloat();
        }
        [BurstCompile]
        [MonoPInvokeCallback(typeof(RpcExecutor.ExecuteDelegate))]
        private static void InvokeExecute(ref RpcExecutor.Parameters parameters)
        {
            RpcExecutor.ExecuteCreateRequestComponent<ECSFrenzyPlayAudioRequestSerializer, ECSFrenzy.PlayAudioRequest>(ref parameters);
        }

        static PortableFunctionPointer<RpcExecutor.ExecuteDelegate> InvokeExecuteFunctionPointer =
            new PortableFunctionPointer<RpcExecutor.ExecuteDelegate>(InvokeExecute);
        public PortableFunctionPointer<RpcExecutor.ExecuteDelegate> CompileExecute()
        {
            return InvokeExecuteFunctionPointer;
        }
    }
    class ECSFrenzyPlayAudioRequestRpcCommandRequestSystem : RpcCommandRequestSystem<ECSFrenzyPlayAudioRequestSerializer, ECSFrenzy.PlayAudioRequest>
    {
    }
}
